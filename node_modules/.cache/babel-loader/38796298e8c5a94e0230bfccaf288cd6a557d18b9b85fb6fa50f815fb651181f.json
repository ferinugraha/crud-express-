{"ast":null,"code":"var _jsxFileName = \"E:\\\\Folder-Programing\\\\JavaScript\\\\crud-rest_api\\\\src\\\\App.js\";\nimport UserList from \"./component/UserList\";\nimport EditUser from \"./component/EditUser\";\nimport AddUser from \"./component/AddUser\";\nimport ReadUser from \"./component/ReadUser\";\nimport AddExport from \"./component/Export\";\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst express = require('express');\nconst XLSX = require('xlsx');\nconst app = express();\nconst port = 3000;\nconst data = [['Name', 'Age'], ['John', 30], ['Jane', 25], ['Doe', 28]];\napp.get('/download-excel', (req, res) => {\n  const wb = XLSX.utils.book_new();\n  const ws = XLSX.utils.aoa_to_sheet(data);\n  XLSX.utils.book_append_sheet(wb, ws, 'Data');\n  const excelFilePath = 'data.xlsx';\n  XLSX.writeFile(wb, excelFilePath);\n  res.download(excelFilePath, 'data.xlsx', err => {\n    if (err) {\n      console.error('Error downloading file:', err);\n      res.status(500).send('Error downloading file');\n    } else {\n      console.log('File downloaded successfully');\n    }\n  });\n});\napp.listen(port, () => {\n  console.log(`Server is running on port ${port}`);\n});\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(UserList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"add\",\n        element: /*#__PURE__*/_jsxDEV(AddUser, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"export\",\n        element: /*#__PURE__*/_jsxDEV(AddExport, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"edit/:id\",\n        element: /*#__PURE__*/_jsxDEV(EditUser, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"read/:id\",\n        element: /*#__PURE__*/_jsxDEV(ReadUser, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["UserList","EditUser","AddUser","ReadUser","AddExport","BrowserRouter","Routes","Route","jsxDEV","_jsxDEV","express","require","XLSX","app","port","data","get","req","res","wb","utils","book_new","ws","aoa_to_sheet","book_append_sheet","excelFilePath","writeFile","download","err","console","error","status","send","log","listen","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Folder-Programing/JavaScript/crud-rest_api/src/App.js"],"sourcesContent":["import UserList from \"./component/UserList\";\r\nimport EditUser from \"./component/EditUser\";\r\nimport AddUser from \"./component/AddUser\";\r\nimport ReadUser from \"./component/ReadUser\";\r\nimport AddExport from \"./component/Export\";\r\n\r\nimport {BrowserRouter, Routes, Route} from 'react-router-dom';\r\n\r\nconst express = require('express');\r\nconst XLSX = require('xlsx');\r\n\r\n\r\nconst app = express();\r\nconst port = 3000;\r\n\r\nconst data = [\r\n  ['Name', 'Age'],\r\n  ['John', 30],\r\n  ['Jane', 25],\r\n  ['Doe', 28]\r\n];\r\n\r\napp.get('/download-excel', (req, res) => {\r\n  const wb = XLSX.utils.book_new();\r\n  const ws = XLSX.utils.aoa_to_sheet(data);\r\n  XLSX.utils.book_append_sheet(wb, ws, 'Data');\r\n\r\n  const excelFilePath = 'data.xlsx';\r\n  XLSX.writeFile(wb, excelFilePath);\r\n\r\n  res.download(excelFilePath, 'data.xlsx', (err) => {\r\n    if (err) {\r\n      console.error('Error downloading file:', err);\r\n      res.status(500).send('Error downloading file');\r\n    } else {\r\n      console.log('File downloaded successfully');\r\n    }\r\n  });\r\n});\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server is running on port ${port}`);\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n    <Routes>\r\n      <Route path=\"/\" element={<UserList />} />\r\n      <Route path=\"add\" element={<AddUser />} />\r\n      <Route path=\"export\" element={<AddExport />} />\r\n      <Route path=\"edit/:id\" element={<EditUser />} />\r\n      <Route path=\"read/:id\" element={<ReadUser />} />\r\n    </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}